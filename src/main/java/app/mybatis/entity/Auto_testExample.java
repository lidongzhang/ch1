package app.mybatis.entity;

import java.math.BigDecimal;
import java.util.ArrayList;
import java.util.Date;
import java.util.Iterator;
import java.util.List;

public class Auto_testExample {
    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    protected String orderByClause;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    protected boolean distinct;

    /**
     * This field was generated by MyBatis Generator.
     * This field corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    protected List<Criteria> oredCriteria;

    private Integer limit;

    private Integer offset;

    private Integer rowidStart;
    private Integer rowidEnd;


    public Integer getRowidStart() {
        return rowidStart;
    }

    public void setRowidStart(Integer rowidStart) {
        this.rowidStart = rowidStart;
    }

    public Integer getRowidEnd() {
        return rowidEnd;
    }

    public void setRowidEnd(Integer rowidEnd) {
        this.rowidEnd = rowidEnd;
    }




    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    public Auto_testExample() {
        oredCriteria = new ArrayList<Criteria>();
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    public void setOrderByClause(String orderByClause) {
        this.orderByClause = orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    public String getOrderByClause() {
        return orderByClause;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    public void setDistinct(boolean distinct) {
        this.distinct = distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    public boolean isDistinct() {
        return distinct;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    public List<Criteria> getOredCriteria() {
        return oredCriteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    public void or(Criteria criteria) {
        oredCriteria.add(criteria);
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    public Criteria or() {
        Criteria criteria = createCriteriaInternal();
        oredCriteria.add(criteria);
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    public Criteria createCriteria() {
        Criteria criteria = createCriteriaInternal();
        if (oredCriteria.size() == 0) {
            oredCriteria.add(criteria);
        }
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    protected Criteria createCriteriaInternal() {
        Criteria criteria = new Criteria();
        return criteria;
    }

    /**
     * This method was generated by MyBatis Generator.
     * This method corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    public void clear() {
        oredCriteria.clear();
        orderByClause = null;
        distinct = false;
    }

    public void setLimit(Integer limit) {
        this.limit = limit;
    }

    public Integer getLimit() {
        return limit;
    }

    public void setOffset(Integer offset) {
        this.offset = offset;
    }

    public Integer getOffset() {
        return offset;
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    protected abstract static class GeneratedCriteria {
        protected List<Criterion> criteria;

        protected GeneratedCriteria() {
            super();
            criteria = new ArrayList<Criterion>();
        }

        public boolean isValid() {
            return criteria.size() > 0;
        }

        public List<Criterion> getAllCriteria() {
            return criteria;
        }

        public List<Criterion> getCriteria() {
            return criteria;
        }

        protected void addCriterion(String condition) {
            if (condition == null) {
                throw new RuntimeException("Value for condition cannot be null");
            }
            criteria.add(new Criterion(condition));
        }

        protected void addCriterion(String condition, Object value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value));
        }

        protected void addCriterion(String condition, Object value1, Object value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            criteria.add(new Criterion(condition, value1, value2));
        }

        protected void addCriterionForJDBCDate(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value.getTime()), property);
        }

        protected void addCriterionForJDBCDate(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Date> dateList = new ArrayList<java.sql.Date>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                dateList.add(new java.sql.Date(iter.next().getTime()));
            }
            addCriterion(condition, dateList, property);
        }

        protected void addCriterionForJDBCDate(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Date(value1.getTime()), new java.sql.Date(value2.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value, String property) {
            if (value == null) {
                throw new RuntimeException("Value for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value.getTime()), property);
        }

        protected void addCriterionForJDBCTime(String condition, List<Date> values, String property) {
            if (values == null || values.size() == 0) {
                throw new RuntimeException("Value list for " + property + " cannot be null or empty");
            }
            List<java.sql.Time> timeList = new ArrayList<java.sql.Time>();
            Iterator<Date> iter = values.iterator();
            while (iter.hasNext()) {
                timeList.add(new java.sql.Time(iter.next().getTime()));
            }
            addCriterion(condition, timeList, property);
        }

        protected void addCriterionForJDBCTime(String condition, Date value1, Date value2, String property) {
            if (value1 == null || value2 == null) {
                throw new RuntimeException("Between values for " + property + " cannot be null");
            }
            addCriterion(condition, new java.sql.Time(value1.getTime()), new java.sql.Time(value2.getTime()), property);
        }

        public Criteria andIDIsNull() {
            addCriterion("ID is null");
            return (Criteria) this;
        }

        public Criteria andIDIsNotNull() {
            addCriterion("ID is not null");
            return (Criteria) this;
        }

        public Criteria andIDEqualTo(Integer value) {
            addCriterion("ID =", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotEqualTo(Integer value) {
            addCriterion("ID <>", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThan(Integer value) {
            addCriterion("ID >", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDGreaterThanOrEqualTo(Integer value) {
            addCriterion("ID >=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThan(Integer value) {
            addCriterion("ID <", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDLessThanOrEqualTo(Integer value) {
            addCriterion("ID <=", value, "ID");
            return (Criteria) this;
        }

        public Criteria andIDIn(List<Integer> values) {
            addCriterion("ID in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotIn(List<Integer> values) {
            addCriterion("ID not in", values, "ID");
            return (Criteria) this;
        }

        public Criteria andIDBetween(Integer value1, Integer value2) {
            addCriterion("ID between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andIDNotBetween(Integer value1, Integer value2) {
            addCriterion("ID not between", value1, value2, "ID");
            return (Criteria) this;
        }

        public Criteria andCol1IsNull() {
            addCriterion("col1 is null");
            return (Criteria) this;
        }

        public Criteria andCol1IsNotNull() {
            addCriterion("col1 is not null");
            return (Criteria) this;
        }

        public Criteria andCol1EqualTo(String value) {
            addCriterion("col1 =", value, "col1");
            return (Criteria) this;
        }

        public Criteria andCol1NotEqualTo(String value) {
            addCriterion("col1 <>", value, "col1");
            return (Criteria) this;
        }

        public Criteria andCol1GreaterThan(String value) {
            addCriterion("col1 >", value, "col1");
            return (Criteria) this;
        }

        public Criteria andCol1GreaterThanOrEqualTo(String value) {
            addCriterion("col1 >=", value, "col1");
            return (Criteria) this;
        }

        public Criteria andCol1LessThan(String value) {
            addCriterion("col1 <", value, "col1");
            return (Criteria) this;
        }

        public Criteria andCol1LessThanOrEqualTo(String value) {
            addCriterion("col1 <=", value, "col1");
            return (Criteria) this;
        }

        public Criteria andCol1Like(String value) {
            addCriterion("col1 like", value, "col1");
            return (Criteria) this;
        }

        public Criteria andCol1NotLike(String value) {
            addCriterion("col1 not like", value, "col1");
            return (Criteria) this;
        }

        public Criteria andCol1In(List<String> values) {
            addCriterion("col1 in", values, "col1");
            return (Criteria) this;
        }

        public Criteria andCol1NotIn(List<String> values) {
            addCriterion("col1 not in", values, "col1");
            return (Criteria) this;
        }

        public Criteria andCol1Between(String value1, String value2) {
            addCriterion("col1 between", value1, value2, "col1");
            return (Criteria) this;
        }

        public Criteria andCol1NotBetween(String value1, String value2) {
            addCriterion("col1 not between", value1, value2, "col1");
            return (Criteria) this;
        }

        public Criteria andCol2IsNull() {
            addCriterion("col2 is null");
            return (Criteria) this;
        }

        public Criteria andCol2IsNotNull() {
            addCriterion("col2 is not null");
            return (Criteria) this;
        }

        public Criteria andCol2EqualTo(Integer value) {
            addCriterion("col2 =", value, "col2");
            return (Criteria) this;
        }

        public Criteria andCol2NotEqualTo(Integer value) {
            addCriterion("col2 <>", value, "col2");
            return (Criteria) this;
        }

        public Criteria andCol2GreaterThan(Integer value) {
            addCriterion("col2 >", value, "col2");
            return (Criteria) this;
        }

        public Criteria andCol2GreaterThanOrEqualTo(Integer value) {
            addCriterion("col2 >=", value, "col2");
            return (Criteria) this;
        }

        public Criteria andCol2LessThan(Integer value) {
            addCriterion("col2 <", value, "col2");
            return (Criteria) this;
        }

        public Criteria andCol2LessThanOrEqualTo(Integer value) {
            addCriterion("col2 <=", value, "col2");
            return (Criteria) this;
        }

        public Criteria andCol2In(List<Integer> values) {
            addCriterion("col2 in", values, "col2");
            return (Criteria) this;
        }

        public Criteria andCol2NotIn(List<Integer> values) {
            addCriterion("col2 not in", values, "col2");
            return (Criteria) this;
        }

        public Criteria andCol2Between(Integer value1, Integer value2) {
            addCriterion("col2 between", value1, value2, "col2");
            return (Criteria) this;
        }

        public Criteria andCol2NotBetween(Integer value1, Integer value2) {
            addCriterion("col2 not between", value1, value2, "col2");
            return (Criteria) this;
        }

        public Criteria andC1IsNull() {
            addCriterion("c1 is null");
            return (Criteria) this;
        }

        public Criteria andC1IsNotNull() {
            addCriterion("c1 is not null");
            return (Criteria) this;
        }

        public Criteria andC1EqualTo(String value) {
            addCriterion("c1 =", value, "c1");
            return (Criteria) this;
        }

        public Criteria andC1NotEqualTo(String value) {
            addCriterion("c1 <>", value, "c1");
            return (Criteria) this;
        }

        public Criteria andC1GreaterThan(String value) {
            addCriterion("c1 >", value, "c1");
            return (Criteria) this;
        }

        public Criteria andC1GreaterThanOrEqualTo(String value) {
            addCriterion("c1 >=", value, "c1");
            return (Criteria) this;
        }

        public Criteria andC1LessThan(String value) {
            addCriterion("c1 <", value, "c1");
            return (Criteria) this;
        }

        public Criteria andC1LessThanOrEqualTo(String value) {
            addCriterion("c1 <=", value, "c1");
            return (Criteria) this;
        }

        public Criteria andC1Like(String value) {
            addCriterion("c1 like", value, "c1");
            return (Criteria) this;
        }

        public Criteria andC1NotLike(String value) {
            addCriterion("c1 not like", value, "c1");
            return (Criteria) this;
        }

        public Criteria andC1In(List<String> values) {
            addCriterion("c1 in", values, "c1");
            return (Criteria) this;
        }

        public Criteria andC1NotIn(List<String> values) {
            addCriterion("c1 not in", values, "c1");
            return (Criteria) this;
        }

        public Criteria andC1Between(String value1, String value2) {
            addCriterion("c1 between", value1, value2, "c1");
            return (Criteria) this;
        }

        public Criteria andC1NotBetween(String value1, String value2) {
            addCriterion("c1 not between", value1, value2, "c1");
            return (Criteria) this;
        }

        public Criteria andC2IsNull() {
            addCriterion("c2 is null");
            return (Criteria) this;
        }

        public Criteria andC2IsNotNull() {
            addCriterion("c2 is not null");
            return (Criteria) this;
        }

        public Criteria andC2EqualTo(Long value) {
            addCriterion("c2 =", value, "c2");
            return (Criteria) this;
        }

        public Criteria andC2NotEqualTo(Long value) {
            addCriterion("c2 <>", value, "c2");
            return (Criteria) this;
        }

        public Criteria andC2GreaterThan(Long value) {
            addCriterion("c2 >", value, "c2");
            return (Criteria) this;
        }

        public Criteria andC2GreaterThanOrEqualTo(Long value) {
            addCriterion("c2 >=", value, "c2");
            return (Criteria) this;
        }

        public Criteria andC2LessThan(Long value) {
            addCriterion("c2 <", value, "c2");
            return (Criteria) this;
        }

        public Criteria andC2LessThanOrEqualTo(Long value) {
            addCriterion("c2 <=", value, "c2");
            return (Criteria) this;
        }

        public Criteria andC2In(List<Long> values) {
            addCriterion("c2 in", values, "c2");
            return (Criteria) this;
        }

        public Criteria andC2NotIn(List<Long> values) {
            addCriterion("c2 not in", values, "c2");
            return (Criteria) this;
        }

        public Criteria andC2Between(Long value1, Long value2) {
            addCriterion("c2 between", value1, value2, "c2");
            return (Criteria) this;
        }

        public Criteria andC2NotBetween(Long value1, Long value2) {
            addCriterion("c2 not between", value1, value2, "c2");
            return (Criteria) this;
        }

        public Criteria andC5IsNull() {
            addCriterion("c5 is null");
            return (Criteria) this;
        }

        public Criteria andC5IsNotNull() {
            addCriterion("c5 is not null");
            return (Criteria) this;
        }

        public Criteria andC5EqualTo(String value) {
            addCriterion("c5 =", value, "c5");
            return (Criteria) this;
        }

        public Criteria andC5NotEqualTo(String value) {
            addCriterion("c5 <>", value, "c5");
            return (Criteria) this;
        }

        public Criteria andC5GreaterThan(String value) {
            addCriterion("c5 >", value, "c5");
            return (Criteria) this;
        }

        public Criteria andC5GreaterThanOrEqualTo(String value) {
            addCriterion("c5 >=", value, "c5");
            return (Criteria) this;
        }

        public Criteria andC5LessThan(String value) {
            addCriterion("c5 <", value, "c5");
            return (Criteria) this;
        }

        public Criteria andC5LessThanOrEqualTo(String value) {
            addCriterion("c5 <=", value, "c5");
            return (Criteria) this;
        }

        public Criteria andC5Like(String value) {
            addCriterion("c5 like", value, "c5");
            return (Criteria) this;
        }

        public Criteria andC5NotLike(String value) {
            addCriterion("c5 not like", value, "c5");
            return (Criteria) this;
        }

        public Criteria andC5In(List<String> values) {
            addCriterion("c5 in", values, "c5");
            return (Criteria) this;
        }

        public Criteria andC5NotIn(List<String> values) {
            addCriterion("c5 not in", values, "c5");
            return (Criteria) this;
        }

        public Criteria andC5Between(String value1, String value2) {
            addCriterion("c5 between", value1, value2, "c5");
            return (Criteria) this;
        }

        public Criteria andC5NotBetween(String value1, String value2) {
            addCriterion("c5 not between", value1, value2, "c5");
            return (Criteria) this;
        }

        public Criteria andC6IsNull() {
            addCriterion("c6 is null");
            return (Criteria) this;
        }

        public Criteria andC6IsNotNull() {
            addCriterion("c6 is not null");
            return (Criteria) this;
        }

        public Criteria andC6EqualTo(BigDecimal value) {
            addCriterion("c6 =", value, "c6");
            return (Criteria) this;
        }

        public Criteria andC6NotEqualTo(BigDecimal value) {
            addCriterion("c6 <>", value, "c6");
            return (Criteria) this;
        }

        public Criteria andC6GreaterThan(BigDecimal value) {
            addCriterion("c6 >", value, "c6");
            return (Criteria) this;
        }

        public Criteria andC6GreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("c6 >=", value, "c6");
            return (Criteria) this;
        }

        public Criteria andC6LessThan(BigDecimal value) {
            addCriterion("c6 <", value, "c6");
            return (Criteria) this;
        }

        public Criteria andC6LessThanOrEqualTo(BigDecimal value) {
            addCriterion("c6 <=", value, "c6");
            return (Criteria) this;
        }

        public Criteria andC6In(List<BigDecimal> values) {
            addCriterion("c6 in", values, "c6");
            return (Criteria) this;
        }

        public Criteria andC6NotIn(List<BigDecimal> values) {
            addCriterion("c6 not in", values, "c6");
            return (Criteria) this;
        }

        public Criteria andC6Between(BigDecimal value1, BigDecimal value2) {
            addCriterion("c6 between", value1, value2, "c6");
            return (Criteria) this;
        }

        public Criteria andC6NotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("c6 not between", value1, value2, "c6");
            return (Criteria) this;
        }

        public Criteria andC8IsNull() {
            addCriterion("c8 is null");
            return (Criteria) this;
        }

        public Criteria andC8IsNotNull() {
            addCriterion("c8 is not null");
            return (Criteria) this;
        }

        public Criteria andC8EqualTo(String value) {
            addCriterion("c8 =", value, "c8");
            return (Criteria) this;
        }

        public Criteria andC8NotEqualTo(String value) {
            addCriterion("c8 <>", value, "c8");
            return (Criteria) this;
        }

        public Criteria andC8GreaterThan(String value) {
            addCriterion("c8 >", value, "c8");
            return (Criteria) this;
        }

        public Criteria andC8GreaterThanOrEqualTo(String value) {
            addCriterion("c8 >=", value, "c8");
            return (Criteria) this;
        }

        public Criteria andC8LessThan(String value) {
            addCriterion("c8 <", value, "c8");
            return (Criteria) this;
        }

        public Criteria andC8LessThanOrEqualTo(String value) {
            addCriterion("c8 <=", value, "c8");
            return (Criteria) this;
        }

        public Criteria andC8Like(String value) {
            addCriterion("c8 like", value, "c8");
            return (Criteria) this;
        }

        public Criteria andC8NotLike(String value) {
            addCriterion("c8 not like", value, "c8");
            return (Criteria) this;
        }

        public Criteria andC8In(List<String> values) {
            addCriterion("c8 in", values, "c8");
            return (Criteria) this;
        }

        public Criteria andC8NotIn(List<String> values) {
            addCriterion("c8 not in", values, "c8");
            return (Criteria) this;
        }

        public Criteria andC8Between(String value1, String value2) {
            addCriterion("c8 between", value1, value2, "c8");
            return (Criteria) this;
        }

        public Criteria andC8NotBetween(String value1, String value2) {
            addCriterion("c8 not between", value1, value2, "c8");
            return (Criteria) this;
        }

        public Criteria andC10IsNull() {
            addCriterion("c10 is null");
            return (Criteria) this;
        }

        public Criteria andC10IsNotNull() {
            addCriterion("c10 is not null");
            return (Criteria) this;
        }

        public Criteria andC10EqualTo(Date value) {
            addCriterionForJDBCDate("c10 =", value, "c10");
            return (Criteria) this;
        }

        public Criteria andC10NotEqualTo(Date value) {
            addCriterionForJDBCDate("c10 <>", value, "c10");
            return (Criteria) this;
        }

        public Criteria andC10GreaterThan(Date value) {
            addCriterionForJDBCDate("c10 >", value, "c10");
            return (Criteria) this;
        }

        public Criteria andC10GreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("c10 >=", value, "c10");
            return (Criteria) this;
        }

        public Criteria andC10LessThan(Date value) {
            addCriterionForJDBCDate("c10 <", value, "c10");
            return (Criteria) this;
        }

        public Criteria andC10LessThanOrEqualTo(Date value) {
            addCriterionForJDBCDate("c10 <=", value, "c10");
            return (Criteria) this;
        }

        public Criteria andC10In(List<Date> values) {
            addCriterionForJDBCDate("c10 in", values, "c10");
            return (Criteria) this;
        }

        public Criteria andC10NotIn(List<Date> values) {
            addCriterionForJDBCDate("c10 not in", values, "c10");
            return (Criteria) this;
        }

        public Criteria andC10Between(Date value1, Date value2) {
            addCriterionForJDBCDate("c10 between", value1, value2, "c10");
            return (Criteria) this;
        }

        public Criteria andC10NotBetween(Date value1, Date value2) {
            addCriterionForJDBCDate("c10 not between", value1, value2, "c10");
            return (Criteria) this;
        }

        public Criteria andC11IsNull() {
            addCriterion("c11 is null");
            return (Criteria) this;
        }

        public Criteria andC11IsNotNull() {
            addCriterion("c11 is not null");
            return (Criteria) this;
        }

        public Criteria andC11EqualTo(Date value) {
            addCriterionForJDBCTime("c11 =", value, "c11");
            return (Criteria) this;
        }

        public Criteria andC11NotEqualTo(Date value) {
            addCriterionForJDBCTime("c11 <>", value, "c11");
            return (Criteria) this;
        }

        public Criteria andC11GreaterThan(Date value) {
            addCriterionForJDBCTime("c11 >", value, "c11");
            return (Criteria) this;
        }

        public Criteria andC11GreaterThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("c11 >=", value, "c11");
            return (Criteria) this;
        }

        public Criteria andC11LessThan(Date value) {
            addCriterionForJDBCTime("c11 <", value, "c11");
            return (Criteria) this;
        }

        public Criteria andC11LessThanOrEqualTo(Date value) {
            addCriterionForJDBCTime("c11 <=", value, "c11");
            return (Criteria) this;
        }

        public Criteria andC11In(List<Date> values) {
            addCriterionForJDBCTime("c11 in", values, "c11");
            return (Criteria) this;
        }

        public Criteria andC11NotIn(List<Date> values) {
            addCriterionForJDBCTime("c11 not in", values, "c11");
            return (Criteria) this;
        }

        public Criteria andC11Between(Date value1, Date value2) {
            addCriterionForJDBCTime("c11 between", value1, value2, "c11");
            return (Criteria) this;
        }

        public Criteria andC11NotBetween(Date value1, Date value2) {
            addCriterionForJDBCTime("c11 not between", value1, value2, "c11");
            return (Criteria) this;
        }

        public Criteria andC12IsNull() {
            addCriterion("c12 is null");
            return (Criteria) this;
        }

        public Criteria andC12IsNotNull() {
            addCriterion("c12 is not null");
            return (Criteria) this;
        }

        public Criteria andC12EqualTo(Date value) {
            addCriterion("c12 =", value, "c12");
            return (Criteria) this;
        }

        public Criteria andC12NotEqualTo(Date value) {
            addCriterion("c12 <>", value, "c12");
            return (Criteria) this;
        }

        public Criteria andC12GreaterThan(Date value) {
            addCriterion("c12 >", value, "c12");
            return (Criteria) this;
        }

        public Criteria andC12GreaterThanOrEqualTo(Date value) {
            addCriterion("c12 >=", value, "c12");
            return (Criteria) this;
        }

        public Criteria andC12LessThan(Date value) {
            addCriterion("c12 <", value, "c12");
            return (Criteria) this;
        }

        public Criteria andC12LessThanOrEqualTo(Date value) {
            addCriterion("c12 <=", value, "c12");
            return (Criteria) this;
        }

        public Criteria andC12In(List<Date> values) {
            addCriterion("c12 in", values, "c12");
            return (Criteria) this;
        }

        public Criteria andC12NotIn(List<Date> values) {
            addCriterion("c12 not in", values, "c12");
            return (Criteria) this;
        }

        public Criteria andC12Between(Date value1, Date value2) {
            addCriterion("c12 between", value1, value2, "c12");
            return (Criteria) this;
        }

        public Criteria andC12NotBetween(Date value1, Date value2) {
            addCriterion("c12 not between", value1, value2, "c12");
            return (Criteria) this;
        }

        public Criteria andC13IsNull() {
            addCriterion("c13 is null");
            return (Criteria) this;
        }

        public Criteria andC13IsNotNull() {
            addCriterion("c13 is not null");
            return (Criteria) this;
        }

        public Criteria andC13EqualTo(Date value) {
            addCriterion("c13 =", value, "c13");
            return (Criteria) this;
        }

        public Criteria andC13NotEqualTo(Date value) {
            addCriterion("c13 <>", value, "c13");
            return (Criteria) this;
        }

        public Criteria andC13GreaterThan(Date value) {
            addCriterion("c13 >", value, "c13");
            return (Criteria) this;
        }

        public Criteria andC13GreaterThanOrEqualTo(Date value) {
            addCriterion("c13 >=", value, "c13");
            return (Criteria) this;
        }

        public Criteria andC13LessThan(Date value) {
            addCriterion("c13 <", value, "c13");
            return (Criteria) this;
        }

        public Criteria andC13LessThanOrEqualTo(Date value) {
            addCriterion("c13 <=", value, "c13");
            return (Criteria) this;
        }

        public Criteria andC13In(List<Date> values) {
            addCriterion("c13 in", values, "c13");
            return (Criteria) this;
        }

        public Criteria andC13NotIn(List<Date> values) {
            addCriterion("c13 not in", values, "c13");
            return (Criteria) this;
        }

        public Criteria andC13Between(Date value1, Date value2) {
            addCriterion("c13 between", value1, value2, "c13");
            return (Criteria) this;
        }

        public Criteria andC13NotBetween(Date value1, Date value2) {
            addCriterion("c13 not between", value1, value2, "c13");
            return (Criteria) this;
        }

        public Criteria andC14IsNull() {
            addCriterion("c14 is null");
            return (Criteria) this;
        }

        public Criteria andC14IsNotNull() {
            addCriterion("c14 is not null");
            return (Criteria) this;
        }

        public Criteria andC14EqualTo(Short value) {
            addCriterion("c14 =", value, "c14");
            return (Criteria) this;
        }

        public Criteria andC14NotEqualTo(Short value) {
            addCriterion("c14 <>", value, "c14");
            return (Criteria) this;
        }

        public Criteria andC14GreaterThan(Short value) {
            addCriterion("c14 >", value, "c14");
            return (Criteria) this;
        }

        public Criteria andC14GreaterThanOrEqualTo(Short value) {
            addCriterion("c14 >=", value, "c14");
            return (Criteria) this;
        }

        public Criteria andC14LessThan(Short value) {
            addCriterion("c14 <", value, "c14");
            return (Criteria) this;
        }

        public Criteria andC14LessThanOrEqualTo(Short value) {
            addCriterion("c14 <=", value, "c14");
            return (Criteria) this;
        }

        public Criteria andC14In(List<Short> values) {
            addCriterion("c14 in", values, "c14");
            return (Criteria) this;
        }

        public Criteria andC14NotIn(List<Short> values) {
            addCriterion("c14 not in", values, "c14");
            return (Criteria) this;
        }

        public Criteria andC14Between(Short value1, Short value2) {
            addCriterion("c14 between", value1, value2, "c14");
            return (Criteria) this;
        }

        public Criteria andC14NotBetween(Short value1, Short value2) {
            addCriterion("c14 not between", value1, value2, "c14");
            return (Criteria) this;
        }

        public Criteria andC15IsNull() {
            addCriterion("c15 is null");
            return (Criteria) this;
        }

        public Criteria andC15IsNotNull() {
            addCriterion("c15 is not null");
            return (Criteria) this;
        }

        public Criteria andC15EqualTo(Byte value) {
            addCriterion("c15 =", value, "c15");
            return (Criteria) this;
        }

        public Criteria andC15NotEqualTo(Byte value) {
            addCriterion("c15 <>", value, "c15");
            return (Criteria) this;
        }

        public Criteria andC15GreaterThan(Byte value) {
            addCriterion("c15 >", value, "c15");
            return (Criteria) this;
        }

        public Criteria andC15GreaterThanOrEqualTo(Byte value) {
            addCriterion("c15 >=", value, "c15");
            return (Criteria) this;
        }

        public Criteria andC15LessThan(Byte value) {
            addCriterion("c15 <", value, "c15");
            return (Criteria) this;
        }

        public Criteria andC15LessThanOrEqualTo(Byte value) {
            addCriterion("c15 <=", value, "c15");
            return (Criteria) this;
        }

        public Criteria andC15In(List<Byte> values) {
            addCriterion("c15 in", values, "c15");
            return (Criteria) this;
        }

        public Criteria andC15NotIn(List<Byte> values) {
            addCriterion("c15 not in", values, "c15");
            return (Criteria) this;
        }

        public Criteria andC15Between(Byte value1, Byte value2) {
            addCriterion("c15 between", value1, value2, "c15");
            return (Criteria) this;
        }

        public Criteria andC15NotBetween(Byte value1, Byte value2) {
            addCriterion("c15 not between", value1, value2, "c15");
            return (Criteria) this;
        }

        public Criteria andC17IsNull() {
            addCriterion("c17 is null");
            return (Criteria) this;
        }

        public Criteria andC17IsNotNull() {
            addCriterion("c17 is not null");
            return (Criteria) this;
        }

        public Criteria andC17EqualTo(String value) {
            addCriterion("c17 =", value, "c17");
            return (Criteria) this;
        }

        public Criteria andC17NotEqualTo(String value) {
            addCriterion("c17 <>", value, "c17");
            return (Criteria) this;
        }

        public Criteria andC17GreaterThan(String value) {
            addCriterion("c17 >", value, "c17");
            return (Criteria) this;
        }

        public Criteria andC17GreaterThanOrEqualTo(String value) {
            addCriterion("c17 >=", value, "c17");
            return (Criteria) this;
        }

        public Criteria andC17LessThan(String value) {
            addCriterion("c17 <", value, "c17");
            return (Criteria) this;
        }

        public Criteria andC17LessThanOrEqualTo(String value) {
            addCriterion("c17 <=", value, "c17");
            return (Criteria) this;
        }

        public Criteria andC17Like(String value) {
            addCriterion("c17 like", value, "c17");
            return (Criteria) this;
        }

        public Criteria andC17NotLike(String value) {
            addCriterion("c17 not like", value, "c17");
            return (Criteria) this;
        }

        public Criteria andC17In(List<String> values) {
            addCriterion("c17 in", values, "c17");
            return (Criteria) this;
        }

        public Criteria andC17NotIn(List<String> values) {
            addCriterion("c17 not in", values, "c17");
            return (Criteria) this;
        }

        public Criteria andC17Between(String value1, String value2) {
            addCriterion("c17 between", value1, value2, "c17");
            return (Criteria) this;
        }

        public Criteria andC17NotBetween(String value1, String value2) {
            addCriterion("c17 not between", value1, value2, "c17");
            return (Criteria) this;
        }

        public Criteria andC18IsNull() {
            addCriterion("c18 is null");
            return (Criteria) this;
        }

        public Criteria andC18IsNotNull() {
            addCriterion("c18 is not null");
            return (Criteria) this;
        }

        public Criteria andC18EqualTo(BigDecimal value) {
            addCriterion("c18 =", value, "c18");
            return (Criteria) this;
        }

        public Criteria andC18NotEqualTo(BigDecimal value) {
            addCriterion("c18 <>", value, "c18");
            return (Criteria) this;
        }

        public Criteria andC18GreaterThan(BigDecimal value) {
            addCriterion("c18 >", value, "c18");
            return (Criteria) this;
        }

        public Criteria andC18GreaterThanOrEqualTo(BigDecimal value) {
            addCriterion("c18 >=", value, "c18");
            return (Criteria) this;
        }

        public Criteria andC18LessThan(BigDecimal value) {
            addCriterion("c18 <", value, "c18");
            return (Criteria) this;
        }

        public Criteria andC18LessThanOrEqualTo(BigDecimal value) {
            addCriterion("c18 <=", value, "c18");
            return (Criteria) this;
        }

        public Criteria andC18In(List<BigDecimal> values) {
            addCriterion("c18 in", values, "c18");
            return (Criteria) this;
        }

        public Criteria andC18NotIn(List<BigDecimal> values) {
            addCriterion("c18 not in", values, "c18");
            return (Criteria) this;
        }

        public Criteria andC18Between(BigDecimal value1, BigDecimal value2) {
            addCriterion("c18 between", value1, value2, "c18");
            return (Criteria) this;
        }

        public Criteria andC18NotBetween(BigDecimal value1, BigDecimal value2) {
            addCriterion("c18 not between", value1, value2, "c18");
            return (Criteria) this;
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table auto_test
     *
     * @mbg.generated do_not_delete_during_merge
     */
    public static class Criteria extends GeneratedCriteria {

        protected Criteria() {
            super();
        }
    }

    /**
     * This class was generated by MyBatis Generator.
     * This class corresponds to the database table auto_test
     *
     * @mbg.generated
     */
    public static class Criterion {
        private String condition;

        private Object value;

        private Object secondValue;

        private boolean noValue;

        private boolean singleValue;

        private boolean betweenValue;

        private boolean listValue;

        private String typeHandler;

        public String getCondition() {
            return condition;
        }

        public Object getValue() {
            return value;
        }

        public Object getSecondValue() {
            return secondValue;
        }

        public boolean isNoValue() {
            return noValue;
        }

        public boolean isSingleValue() {
            return singleValue;
        }

        public boolean isBetweenValue() {
            return betweenValue;
        }

        public boolean isListValue() {
            return listValue;
        }

        public String getTypeHandler() {
            return typeHandler;
        }

        protected Criterion(String condition) {
            super();
            this.condition = condition;
            this.typeHandler = null;
            this.noValue = true;
        }

        protected Criterion(String condition, Object value, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.typeHandler = typeHandler;
            if (value instanceof List<?>) {
                this.listValue = true;
            } else {
                this.singleValue = true;
            }
        }

        protected Criterion(String condition, Object value) {
            this(condition, value, null);
        }

        protected Criterion(String condition, Object value, Object secondValue, String typeHandler) {
            super();
            this.condition = condition;
            this.value = value;
            this.secondValue = secondValue;
            this.typeHandler = typeHandler;
            this.betweenValue = true;
        }

        protected Criterion(String condition, Object value, Object secondValue) {
            this(condition, value, secondValue, null);
        }
    }
}